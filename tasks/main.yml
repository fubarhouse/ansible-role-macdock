---

- name: Dockutil | Detect installation
  stat:
    path: "{{ dockutil_install_path }}"
  register: dockutil_stat

- name: Dockutil | Ensure installed.
  get_url:
    url: "{{ dockutil_url }}"
    dest: "{{ dockutil_install_path }}"
    mode: 0755
  when: not dockutil_stat.stat.exists

- name: Dockutil | Get information on items to remove
  shell: "{{ dockutil_install_path }} --find '{{ item }}'"
  register: dockutil_removeditems
  with_items: "{{ dockitems_disabled }}"
  changed_when: false
  failed_when: false
  check_mode: no
  when: dockitems_remove_all|bool == false

- name: Dockutil | Remove all dock items
  shell: "{{ dockutil_install_path }} --remove all --no-restart"
  register: removed_items_task
  when: dockitems_remove_all|bool == true
  notify:
    - clear cache
    - restart dock
    
- name: Dockutil | Remove all unwanted dock items
  shell: "{{ dockutil_install_path }} --remove '{{ item.item }}' --no-restart"
  with_items: "{{ dockutil_removeditems.results }}"
  loop_control:
    label: "{{item.item}}"
  when:
  - dockitems_remove_all|bool == false
  - (item.item ~ " was found in persistent-apps") in item.stdout
  notify:
    - clear cache
    - restart dock

- name: Dockutil | Get information on configured setup
  shell: "{{ dockutil_install_path }} --find '{{ item.name }}'"
  register: dockutil_newdata
  with_items: "{{ dockitems_enabled }}"
  changed_when: false
  failed_when: false
  check_mode: no

- name: Dockutil | Adding items
  shell: "{{ dockutil_install_path }} --add '{{ item.item.path }}' --position {{ item.item.pos }} --no-restart"
  with_items: "{{ dockutil_newdata.results }}"
  loop_control:
    label: "{{item.item}}"
  when: (item.item.name ~ " was not found in") in item.stdout
  notify:
    - clear cache
    - restart dock

- name: Dockutil | Get information on current setup
  shell: "{{ dockutil_install_path }} --find '{{ item.name }}'"
  register: dockutil_currdata
  with_items: "{{ dockitems_enabled }}"
  changed_when: false
  failed_when: false
  check_mode: no

- name: Dockutil | Moving items
  shell: "{{ dockutil_install_path }} --move '{{ item.item.name }}' --position {{ item.item.pos }} --no-restart"
  with_items: "{{ dockutil_currdata.results }}"
  loop_control:
    label: "{{item.item}}"
  when:
  - (item.item.name ~ " was found in persistent-apps at slot " ~ item.item.pos ~ " in") not in item.stdout
  - (item.item.name ~ " was not found") not in item.stdout
  notify:
    - clear cache
    - restart dock
